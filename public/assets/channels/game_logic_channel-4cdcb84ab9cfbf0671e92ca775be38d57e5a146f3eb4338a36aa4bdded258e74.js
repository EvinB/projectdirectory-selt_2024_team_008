!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ActionCable={})}(this,function(e){"use strict";function t(e){if("function"==typeof e&&(e=e()),e&&!/^wss?:/i.test(e)){const t=document.createElement("a");return t.href=e,t.href=t.href,t.protocol=t.protocol.replace("http","ws"),t.href}return e}function n(e=o("url")||l.default_mount_path){return new S(e)}function o(e){const t=document.head.querySelector(`meta[name='action-cable-${e}']`);if(t)return t.getAttribute("content")}var i={logger:self.console,WebSocket:self.WebSocket},s={log(...e){this.enabled&&(e.push(Date.now()),i.logger.log("[ActionCable]",...e))}};const r=()=>(new Date).getTime(),a=e=>(r()-e)/1e3;class c{constructor(e){this.visibilityDidChange=this.visibilityDidChange.bind(this),this.connection=e,this.reconnectAttempts=0}start(){this.isRunning()||(this.startedAt=r(),delete this.stoppedAt,this.startPolling(),addEventListener("visibilitychange",this.visibilityDidChange),s.log(`ConnectionMonitor started. stale threshold = ${this.constructor.staleThreshold} s`))}stop(){this.isRunning()&&(this.stoppedAt=r(),this.stopPolling(),removeEventListener("visibilitychange",this.visibilityDidChange),s.log("ConnectionMonitor stopped"))}isRunning(){return this.startedAt&&!this.stoppedAt}recordPing(){this.pingedAt=r()}recordConnect(){this.reconnectAttempts=0,this.recordPing(),delete this.disconnectedAt,s.log("ConnectionMonitor recorded connect")}recordDisconnect(){this.disconnectedAt=r(),s.log("ConnectionMonitor recorded disconnect")}startPolling(){this.stopPolling(),this.poll()}stopPolling(){clearTimeout(this.pollTimeout)}poll(){this.pollTimeout=setTimeout(()=>{this.reconnectIfStale(),this.poll()},this.getPollInterval())}getPollInterval(){const{staleThreshold:e,reconnectionBackoffRate:t}=this.constructor;return 1e3*e*Math.pow(1+t,Math.min(this.reconnectAttempts,10))*(1+(0===this.reconnectAttempts?1:t)*Math.random())}reconnectIfStale(){this.connectionIsStale()&&(s.log(`ConnectionMonitor detected stale connection. reconnectAttempts = ${this.reconnectAttempts}, time stale = ${a(this.refreshedAt)} s, stale threshold = ${this.constructor.staleThreshold} s`),this.reconnectAttempts++,this.disconnectedRecently()?s.log(`ConnectionMonitor skipping reopening recent disconnect. time disconnected = ${a(this.disconnectedAt)} s`):(s.log("ConnectionMonitor reopening"),this.connection.reopen()))}get refreshedAt(){return this.pingedAt?this.pingedAt:this.startedAt}connectionIsStale(){return a(this.refreshedAt)>this.constructor.staleThreshold}disconnectedRecently(){return this.disconnectedAt&&a(this.disconnectedAt)<this.constructor.staleThreshold}visibilityDidChange(){"visible"===document.visibilityState&&setTimeout(()=>{!this.connectionIsStale()&&this.connection.isOpen()||(s.log(`ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = ${document.visibilityState}`),this.connection.reopen())},200)}}c.staleThreshold=6,c.reconnectionBackoffRate=.15;var l={message_types:{welcome:"welcome",disconnect:"disconnect",ping:"ping",confirmation:"confirm_subscription",rejection:"reject_subscription"},disconnect_reasons:{unauthorized:"unauthorized",invalid_request:"invalid_request",server_restart:"server_restart"},default_mount_path:"/cable",protocols:["actioncable-v1-json","actioncable-unsupported"]};const{message_types:d,protocols:u}=l,h=u.slice(0,u.length-1),p=[].indexOf;class m{constructor(e){this.open=this.open.bind(this),this.consumer=e,this.subscriptions=this.consumer.subscriptions,this.monitor=new c(this),this.disconnected=!0}send(e){return!!this.isOpen()&&(this.webSocket.send(JSON.stringify(e)),!0)}open(){return this.isActive()?(s.log(`Attempted to open WebSocket, but existing socket is ${this.getState()}`),!1):(s.log(`Opening WebSocket, current state is ${this.getState()}, subprotocols: ${u}`),this.webSocket&&this.uninstallEventHandlers(),this.webSocket=new i.WebSocket(this.consumer.url,u),this.installEventHandlers(),this.monitor.start(),!0)}close({allowReconnect:e}={allowReconnect:!0}){if(e||this.monitor.stop(),this.isOpen())return this.webSocket.close()}reopen(){if(s.log(`Reopening WebSocket, current state is ${this.getState()}`),!this.isActive())return this.open();try{return this.close()}catch(e){s.log("Failed to reopen WebSocket",e)}finally{s.log(`Reopening WebSocket in ${this.constructor.reopenDelay}ms`),setTimeout(this.open,this.constructor.reopenDelay)}}getProtocol(){if(this.webSocket)return this.webSocket.protocol}isOpen(){return this.isState("open")}isActive(){return this.isState("open","connecting")}isProtocolSupported(){return p.call(h,this.getProtocol())>=0}isState(...e){return p.call(e,this.getState())>=0}getState(){if(this.webSocket)for(let e in i.WebSocket)if(i.WebSocket[e]===this.webSocket.readyState)return e.toLowerCase();return null}installEventHandlers(){for(let e in this.events){const t=this.events[e].bind(this);this.webSocket[`on${e}`]=t}}uninstallEventHandlers(){for(let e in this.events)this.webSocket[`on${e}`]=function(){}}}m.reopenDelay=500,m.prototype.events={message(e){if(!this.isProtocolSupported())return;const{identifier:t,message:n,reason:o,reconnect:i,type:r}=JSON.parse(e.data);switch(r){case d.welcome:return this.monitor.recordConnect(),this.subscriptions.reload();case d.disconnect:return s.log(`Disconnecting. Reason: ${o}`),this.close({allowReconnect:i});case d.ping:return this.monitor.recordPing();case d.confirmation:return this.subscriptions.confirmSubscription(t),this.subscriptions.notify(t,"connected");case d.rejection:return this.subscriptions.reject(t);default:return this.subscriptions.notify(t,"received",n)}},open(){if(s.log(`WebSocket onopen event, using '${this.getProtocol()}' subprotocol`),this.disconnected=!1,!this.isProtocolSupported())return s.log("Protocol is unsupported. Stopping monitor and disconnecting."),this.close({allowReconnect:!1})},close(e){if(s.log("WebSocket onclose event"),!this.disconnected)return this.disconnected=!0,this.monitor.recordDisconnect(),this.subscriptions.notifyAll("disconnected",{willAttemptReconnect:this.monitor.isRunning()})},error(){s.log("WebSocket onerror event")}};const g=function(e,t){if(null!=t)for(let n in t){const o=t[n];e[n]=o}return e};class f{constructor(e,t={},n){this.consumer=e,this.identifier=JSON.stringify(t),g(this,n)}perform(e,t={}){return t.action=e,this.send(t)}send(e){return this.consumer.send({command:"message",identifier:this.identifier,data:JSON.stringify(e)})}unsubscribe(){return this.consumer.subscriptions.remove(this)}}class b{constructor(e){this.subscriptions=e,this.pendingSubscriptions=[]}guarantee(e){-1==this.pendingSubscriptions.indexOf(e)?(s.log(`SubscriptionGuarantor guaranteeing ${e.identifier}`),this.pendingSubscriptions.push(e)):s.log(`SubscriptionGuarantor already guaranteeing ${e.identifier}`),this.startGuaranteeing()}forget(e){s.log(`SubscriptionGuarantor forgetting ${e.identifier}`),this.pendingSubscriptions=this.pendingSubscriptions.filter(t=>t!==e)}startGuaranteeing(){this.stopGuaranteeing(),this.retrySubscribing()}stopGuaranteeing(){clearTimeout(this.retryTimeout)}retrySubscribing(){this.retryTimeout=setTimeout(()=>{this.subscriptions&&"function"==typeof this.subscriptions.subscribe&&this.pendingSubscriptions.map(e=>{s.log(`SubscriptionGuarantor resubscribing ${e.identifier}`),this.subscriptions.subscribe(e)})},500)}}class y{constructor(e){this.consumer=e,this.guarantor=new b(this),this.subscriptions=[]}create(e,t){const n="object"==typeof e?e:{channel:e},o=new f(this.consumer,n,t);return this.add(o)}add(e){return this.subscriptions.push(e),this.consumer.ensureActiveConnection(),this.notify(e,"initialized"),this.subscribe(e),e}remove(e){return this.forget(e),this.findAll(e.identifier).length||this.sendCommand(e,"unsubscribe"),e}reject(e){return this.findAll(e).map(e=>(this.forget(e),this.notify(e,"rejected"),e))}forget(e){return this.guarantor.forget(e),this.subscriptions=this.subscriptions.filter(t=>t!==e),e}findAll(e){return this.subscriptions.filter(t=>t.identifier===e)}reload(){return this.subscriptions.map(e=>this.subscribe(e))}notifyAll(e,...t){return this.subscriptions.map(n=>this.notify(n,e,...t))}notify(e,t,...n){let o;return(o="string"==typeof e?this.findAll(e):[e]).map(e=>"function"==typeof e[t]?e[t](...n):undefined)}subscribe(e){this.sendCommand(e,"subscribe")&&this.guarantor.guarantee(e)}confirmSubscription(e){s.log(`Subscription confirmed ${e}`),this.findAll(e).map(e=>this.guarantor.forget(e))}sendCommand(e,t){const{identifier:n}=e;return this.consumer.send({command:t,identifier:n})}}class S{constructor(e){this._url=e,this.subscriptions=new y(this),this.connection=new m(this)}get url(){return t(this._url)}send(e){return this.connection.send(e)}connect(){return this.connection.open()}disconnect(){return this.connection.close({allowReconnect:!1})}ensureActiveConnection(){if(!this.connection.isActive())return this.connection.open()}}e.Connection=m,e.ConnectionMonitor=c,e.Consumer=S,e.INTERNAL=l,e.Subscription=f,e.SubscriptionGuarantor=b,e.Subscriptions=y,e.adapters=i,e.createConsumer=n,e.createWebSocketURL=t,e.getConfig=o,e.logger=s,Object.defineProperty(e,"__esModule",{value:!0})});const createConsumer=ActionCable.createConsumer;window.App||(window.App={}),App.cable=createConsumer(),console.log("App.cable initialized:",App.cable);let gameLogicSubscription=null,lastPosition={x:null,y:null};const SHARD_COST_PER_TILE=2,userColors={},tileColorMapping={"tile-color-1":"#f28b82","tile-color-2":"#fbbc04","tile-color-3":"#fff475","tile-color-4":"#ccff90","tile-color-5":"#a7ffeb","tile-color-6":"#cbf0f8"},ensureGameMembership=async e=>{if(document.getElementById("server-id"))try{const n=document.querySelector("meta[name='csrf-token']").getAttribute("content"),o=await fetch(`/games/${e}/ensure_membership.json`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":n}});if(!o.ok)throw new Error(`Failed to ensure game membership: ${o.statusText}`);const i=await o.json();console.log("Game membership ensured:",i.message||i)}catch(t){throw console.error("Error ensuring game membership:",t),alert("Unable to join the game. Please try again."),t}else console.error("Server element not found. Cannot ensure membership.")},initializeGameLogicChannel=async()=>{console.log(">>> Initializing GameLogicChannel <<<");const e=document.getElementById("game-element");if(!e)return void console.warn("Game element not found. Skipping GameLogicChannel initialization.");const t=e.dataset.gameId,n=parseInt(e.dataset.userId,10),o=e.dataset.username;try{await ensureGameMembership(t),await fetchGameState(t,o),console.log("After ensure membership"),gameLogicSubscription=App.cable.subscriptions.create({channel:"GameLogicChannel",game_id:t},{connected(){console.log(`Connected to GameLogicChannel for game ${t}`)},disconnected(){console.log("Disconnected from GameLogicChannel")},received(e){handleGameChannelEvent(e,n,lastPosition)},makeMove(e,t){handleMove(e,t,lastPosition,n,this,o)}}),attachGridCellListeners(lastPosition)}catch(i){console.error("Failed to initialize GameLogicChannel:",i)}},handleGameChannelEvent=(e,t)=>{const n=document.getElementById("game-element").dataset.gameId;switch(console.log(`data.type: ${e.type}`),e.type){case"game_state":e.positions&&updateGrid(e.positions);break;case"tile_updates":e.updates&&requestAnimationFrame(()=>{e.updates.forEach(e=>{updateTile(e.x,e.y,e.username,e.color,e.owner,e.occupant_avatar)}),refreshGridCellListeners()});break;case"tile_action":let o;if(e.task_type){switch(e.task_type){case"TIC":o=`/games/${n}/tic_tac_toe/`;break;case"NPC":o=`/games/${n}/npc_task/`;break;case"MATH":o=`/games/${n}/math_task/`;break;default:return void console.log("Unknown task type:",e.task_type)}window.location.href=o,handleTileAction(e)}else console.log("No task type found in tile_action data:",e);break;case"balance_update":e.user_id===t&&updateShardBalance(e.balance);break;case"balance_error":showFlashMessage(e.message,"alert"),triggerShardBalanceShake();break;case"move_error":showFlashMessage(e.message||"Invalid move.","alert");break;case"error":showFlashMessage(e.message||"An error occurred.","alert");break;default:console.warn(`Unhandled data type: ${e.type}`)}},handleMove=(e,t,n,o,i,s)=>{let r=calculateDistance(n,{x:e,y:t});console.log(`Making a move from (${n.x}, ${n.y}) to (${e}, ${t})`);const a=document.querySelectorAll(".grid-cell.confirming");if(Array.from(a).some(n=>parseInt(n.dataset.x,10)===e&&parseInt(n.dataset.y,10)===t))return void console.log("Action already in progress for this tile.");const c=document.querySelector(`.grid-cell[data-x='${e}'][data-y='${t}']`);if(c&&(c.classList.add("confirming"),setTimeout(()=>c.classList.remove("confirming"),5e3)),n.x===e&&n.y===t||0===r)return console.log("User clicked on their current tile."),void i.perform("make_move",{x:e,y:t,user_id:o});if(r===Infinity)return void showFlashMessage("Invalid move! You can only move vertically or horizontally.","alert");let l=calculateShardCost(r);if(l>parseInt(document.querySelector(".shard-balance-display p").textContent.match(/\d+/)[0],10))return triggerShardBalanceShake(),void showFlashMessage("Insufficient shards to make this move!","alert");if(c&&!c.classList.contains("owned")){if(!confirm(`This tile is unowned. Claiming it will cost ${l} shards. Do you want to proceed?`))return;return i.perform("make_move",{x:e,y:t,user_id:o}),n.x=e,void(n.y=t)}if(c&&c.classList.contains("owned")){if(c.dataset.owner===s){if(console.log(`Distance: ${r}`),l-=2,(r-=1)<1)return;if(!confirm(`Moving ${r} tiles will cost ${l} shards. Proceed?`))return;return i.perform("make_move",{x:e,y:t,user_id:o}),n.x=e,void(n.y=t)}showFlashMessage("Invalid move! You can only move to tiles you own.","alert")}},handleTileAction=e=>{const{x:t,y:n,message:o}=e,i=document.querySelector(`.grid-cell[data-x='${t}'][data-y='${n}']`);i&&(i.classList.add("active-tile"),setTimeout(()=>{i.classList.remove("active-tile")},3e3))},attachGridCellListeners=()=>{document.querySelectorAll(".grid-cell").forEach(e=>{e.addEventListener("click",()=>{const t=parseInt(e.dataset.x,10),n=parseInt(e.dataset.y,10);gameLogicSubscription.makeMove(t,n)})})},calculateDistance=(e,t)=>{if(null===e.x||null===e.y)return 0;const n=Math.abs(t.x-e.x),o=Math.abs(t.y-e.y);return n>0&&o>0?Infinity:Math.max(n,o)+1},calculateShardCost=e=>Math.max(1,e)*SHARD_COST_PER_TILE,updateShardBalance=e=>{const t=document.querySelector(".shard-balance-display p");t&&(t.textContent=`Shard Balance: ${e} Shards`)},updateGrid=e=>{e.forEach(e=>{updateTile(e.x,e.y,e.username,e.color,e.owner,e.occupant_avatar)})},updateTile=(e,t,n,o,i,s)=>{console.log(`updateTile data: x:${e}, y:${t}, username:${n}, color:${o}, owner:${i}, avatar:${s?"present":"none"}`);const r=document.querySelector(`.grid-cell[data-x='${e}'][data-y='${t}']`);if(r){if(!n&&!i)return r.className="grid-cell",r.removeAttribute("data-owner"),r.innerHTML="",void(r.style.borderColor="");if(n){r.className="grid-cell occupied",r.style.borderColor="";let e=r.querySelector(".tile-avatar");e||((e=document.createElement("img")).className="tile-avatar",r.appendChild(e)),e.src=s?s.startsWith("/assets")?`${window.location.origin}${s}`:s:"/assets/defaultAvatar.png"}else{const e=r.querySelector(".tile-avatar");e&&e.remove(),r.innerHTML="",r.classList.remove("occupied")}i&&(r.classList.add("owned"),r.dataset.owner=i,r.style.borderColor=tileColorMapping[o])}console.log(`Updated tile at (${e}, ${t}) with username=${n}, color=${o}, owner=${i}`)},triggerShardBalanceShake=()=>{const e=document.querySelector(".shard-balance-display");e&&(e.classList.add("shake"),setTimeout(()=>{e.classList.remove("shake")},500))},showFlashMessage=(e,t="alert")=>{const n=document.getElementById("flash-messages");if(!n)return void console.error("Flash container not found. Unable to display flash message.");n.style.zIndex="1001";const o=document.createElement("div");o.className="alert"===t?"alert":"notice",o.innerHTML=`\n        ${e}\n        <button onclick="this.parentElement.style.display='none';" aria-label="Close flash message">\xd7</button>\n    `,n.appendChild(o),setTimeout(()=>{o.style.display="none",n.removeChild(o),n.style.zIndex="-1"},3e3)},fetchGameState=async(e,t)=>{try{const o=await fetch(`/games/${e}/game_state`);if(!o.ok)throw new Error(`Failed to fetch game state: ${o.statusText}`);const i=await o.json();if(i.positions){console.log("Fetched game state:",i.positions),i.positions.forEach(e=>updateTile(e.x,e.y,e.username,e.color,e.owner));const e=i.positions.find(e=>e.username===t);e?(lastPosition.x=e.x,lastPosition.y=e.y,localStorage.setItem("lastPosition",JSON.stringify(lastPosition)),console.log(`Last position for ${t} set to: (${lastPosition.x}, ${lastPosition.y})`)):(lastPosition.x=null,lastPosition.y=null,localStorage.removeItem("lastPosition"),console.log(`No last position found for ${t}. Awaiting first move.`))}else console.error("Unexpected response from game_state:",i)}catch(n){console.error("Error fetching game state:",n)}};document.addEventListener("turbolinks:load",async()=>{lastPosition={x:null,y:null};const e=document.getElementById("game-element"),t=e.dataset.username;if(e){const n=e.dataset.gameId;await fetchGameState(n,t),gameLogicSubscription||await initializeGameLogicChannel()}}),document.addEventListener("turbolinks:before-visit",()=>{gameLogicSubscription&&(gameLogicSubscription.unsubscribe(),gameLogicSubscription=null)});const refreshGridCellListeners=()=>{document.querySelectorAll(".grid-cell").forEach(e=>{e.addEventListener("click",()=>{const t=parseInt(e.dataset.x,10),n=parseInt(e.dataset.y,10);gameLogicSubscription.makeMove(t,n)})})};